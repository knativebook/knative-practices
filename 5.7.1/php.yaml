# 配置Git仓库地址和分支
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: git-resource-helloworld-php
spec:
  type: git
  params:
    - name: url
      value: https://github.com/knativebook/helloworld-php.git
    - name: revision
      value: master

---
# 配置镜像地址（镜像Tag不用配置，Build时自动生成）
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: image-resource-helloworld-php
spec:
  type: image
  params:
    - name: url
      value: docker.io/{username}/helloworld-php

---
# 此Task为镜像自动生成Tag（重用Task）
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: generate-image-tag
spec:
  resources:
    outputs:
      - name: builtImage
        type: image
  results:
    - name: timestamp
      description: Current timestamp
  steps:
    - name: get-timestamp
      image: bash:latest
      script: |
        #!/usr/bin/env bash
        ts=`date "+%Y%m%d-%H%M%S"`
        echo "Current Timestamp: ${ts}"
        echo "Image URL: $(resources.outputs.builtImage.url):${ts}"
        echo $(resources.outputs.builtImage.url):${ts} | tr -d "\n" | tee $(results.timestamp.path)
      volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
  volumes:
    - name: localtime
      hostPath:
        path: /usr/share/zoneinfo/Asia/Shanghai

---
# 此Task将代码进行Build然后Push到DockerRegistry
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-and-push
spec:
  params:
    - name: imageUrl
      type: string
  resources:
    inputs:
      - name: git-source
        type: git
  steps:
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:debug-v0.24.0
      env:
        - name: "DOCKER_CONFIG"
          value: "/tekton/home/.docker/"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(resources.inputs.git-source.path)/Dockerfile
        - --destination=$(params.imageUrl)
        - --context=$(resources.inputs.git-source.path)
        - --log-timestamp
      volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
  volumes:
    - name: localtime
      hostPath:
        path: /usr/share/zoneinfo/Asia/Shanghai

---
# 此Task通过kubectl命令向本地Kubernetes集群部署应用（重用Task）
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deployment
spec:
  params:
    - name: imageUrl
      type: string
    - name: appName
      type: string
  steps:
    - name: create-ksvc
      image: bash:latest 
      command:
        - /bin/sh
      args:
        - -c
        - |
          cat <<EOF > /workspace/knative-ksvc.yaml
            apiVersion: serving.knative.dev/v1
            kind: Service
            metadata:
              name: $(params.appName)
              namespace: default
              labels:
                application: $(params.appName)
                tier: application
            spec:
              template:
                metadata:
                  annotations:
                    autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
                    autoscaling.knative.dev/metric: concurrency
                    autoscaling.knative.dev/minScale: "1"
                  labels:
                    application: $(params.appName)
                    tier: application
                spec:
                  containers:
                  - image: $(params.imageUrl)
                    env:
                      - name: TARGET
                        value: "Tekton Sample"
                    ports:
                      - containerPort: 80
          EOF
    - name: run-kubectl
      image: lachlanevenson/k8s-kubectl:v1.17.12
      command: ['kubectl']
      args:
        - 'apply'
        - '-f'
        - '/workspace/knative-ksvc.yaml'

---
# 此Pipeline用于将各Task串联
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: helloworld-php-pipeline
spec:
  resources:
    - name: git-source-p
      type: git
    - name: builtImage-p
      type: image
  params:
    - name: application
      type: string
  tasks:
    - name: generate-image-url
      taskRef:
        name: generate-image-tag
      resources:
        outputs:
          - name: builtImage
            resource: builtImage-p
    - name: build-and-push
      taskRef:
        name: build-and-push
      runAfter:
        - generate-image-url
      resources:
        inputs:
          - name: git-source
            resource: git-source-p
      params:
        - name: imageUrl
          value: "$(tasks.generate-image-url.results.timestamp)"
    - name: deployment
      taskRef:
        name: deployment
      runAfter:
        - build-and-push
      params:
        - name: appName
          value: $(params.application)
        - name: imageUrl
          value: "$(tasks.generate-image-url.results.timestamp)"

---
# 此PipelineRun为Pipeline传递相应资源参数并触发Pipeline运行
# PipelineRun可以手工创建或通过Dashborad UI创建
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: helloworld-php-pipeline-run
spec:
  params:
  - name: application
    value: helloworld-php
  pipelineRef:
    name: helloworld-php-pipeline
  resources:
  - name: git-source-p
    resourceRef:
      name: git-resource-helloworld-php
  - name: builtImage-p
    resourceRef:
      name: image-resource-helloworld-php
  serviceAccountName: docker-git-sa
  timeout: 0h1m0s